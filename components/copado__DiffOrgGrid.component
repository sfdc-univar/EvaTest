<apex:component >
<apex:attribute name="diffId" type="String" description="Org Diff Id"/>
<apex:pageBlock >
    <apex:pageblockButtons id="removeCacheContainer">
        <apex:commandLink style="display:none;" value="{!$Label.copado__CACHE_REFRESHED_NOW}"  onclick="return rock.removeCached();" rerender="opDummy" id="removeCache"/>
    </apex:pageblockButtons>
    
    <div id="jqxgrid"></div>
    
</apex:pageBlock>

      <script>
        var loadingHTML = '<center><img src="/img/loading.gif" /> <i>{!$Label.copado__LOADING}<span id="retry-label"></span></i></center>';
        $('#jqxgrid').html(loadingHTML); 
      </script>

      <style>
         .green:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected), .jqx-widget .green:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected) {
            color: black;
            background-color: #b6ff00;
        }
        .yellow:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected), .jqx-widget .yellow:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected) {
            color: black;
            background-color: yellow;
        }
        .red:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected), .jqx-widget .red:not(.jqx-grid-cell-hover):not(.jqx-grid-cell-selected) {
            color: black;
            background-color: #e83636;
        }
      </style>      
       <apex:stylesheet value="{!URLFOR($Resource.copado__jqx,'jqwidgets/styles/jqx.base.css')}" />
       <apex:includeScript value="{!URLFOR($Resource.copado__jqx,'jqwidgets/jqx-all.js')}" />
       
       <script>
       
        //namespace
        var rock = rock || {};
        
        
        rock.createCacheDeleteButton = function(date){
            if(!date){
                 $('[id*=removeCacheContainer]').hide();
            }else{
                var $btn = $('[id$=removeCache]');
                $btn.html($btn.html().replace('__DATE__',date)).show();
            }    
        };
            
        
        rock.removeCached = function(){
            //hide
            $('#jqxgrid').html(loadingHTML);            
            //reload
            init(true);
            
            return false;
        };
        
        //config grid
        
        rock.startGrid = function (data) {
                //normalize data
                var len = data.length;
                    
                try{    
                    var theme = 'base',
                    source = {
                        localdata: data,
                        datafields: [
                            { name: 's', type: 'string' },
                            { name: 't', type: 'string' },
                            { name: 'n', type: 'string' }
                        ],
                        datatype: "array",
                        updaterow: function (rowid, rowdata, commit) {
                            commit(true);
                            data[rowid] = rowdata;
                        }
    
                    },

                    cellclass = function (row, columnfield, value) {
                          if (value == 'delete') {
                              return 'red';
                          }
                          else if (value == 'update' ) {
                              return 'yellow';
                          }
                          else return 'green';
                      },
        
                    //adapter wrapper
                    dataAdapter = new $.jqx.dataAdapter(source),
                    
                    //keep jquery pointer for performance query
                    $grid = $('<div>');
                    
                    $("#jqxgrid").html($grid);
                    
                    rock.datasource = source;
                    
                    $grid.jqxGrid({
                        width: '100%',
                        source: dataAdapter,
                        showfilterrow: true,
                        filterable: true,
                        theme: theme,
                        editable: true, 
                        selectionmode: 'none',
                        pageable: true,
                        pagesizeoptions: ['10', '20', '50'],
                        pagesize: 20,
                        sortable: true,
                        columnsresize: true,
                        localization: localizationobj,
                        columns: [
                          {text: '{!$ObjectType.copado__Step__c.Fields.copado__Status__c.Label}', filtertype: 'checkedlist', datafield: 's', width: 120, cellcassname: cellclass },
                          {text: '{!$Label.copado__NAME}', filtertype: 'textbox', filtercondition: 'contains', editable:false, datafield: 'n', width: 400},
                          {text: '{!$Label.copado__TYPE}', datafield: 't', filtertype: 'checkedlist',editable:false ,  columntype: 'textbox' }
                        ]
                    });
                    
                }catch(e){
                    console.error(e)
                }                
         };
          
       function init(force){   
           //start component
           dw.u.getCachedRemote({
               url:rock.config.diff_url,
               name:'OrgDiff',
               parentId: '{!diffId}',
               force: force,
               success:function(metaOrgData, cachedDate){

                    rock.createCacheDeleteButton(cachedDate);
                    rock.startGrid(metaOrgData);

               },
               error: function(r){
                   //console.log('Error: ',r)
               }
           }); 
        }
        
        init(false);   
        
       </script>
</apex:component>